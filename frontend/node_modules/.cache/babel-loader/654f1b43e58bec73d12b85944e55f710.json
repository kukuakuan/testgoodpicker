{"ast":null,"code":"export function getRoundFunction(round) {\n  switch (round) {\n    case 'floor':\n      return Math.floor;\n\n    default:\n      return Math.round;\n  }\n} // For non-negative numbers.\n\nexport function getDiffRatioToNextRoundedNumber(round) {\n  switch (round) {\n    case 'floor':\n      // Math.floor(x) = x\n      // Math.floor(x + 1) = x + 1\n      return 1;\n\n    default:\n      // Math.round(x) = x\n      // Math.round(x + 0.5) = x + 1\n      return 0.5;\n  }\n}","map":{"version":3,"sources":["../source/round.js"],"names":["Math"],"mappings":"AAAA,OAAO,SAAA,gBAAA,CAAA,KAAA,EAAiC;AACvC,UAAA,KAAA;AACC,SAAA,OAAA;AACC,aAAOA,IAAI,CAAX,KAAA;;AACD;AACC,aAAOA,IAAI,CAAX,KAAA;AAJF;EAQD;;AACA,OAAO,SAAA,+BAAA,CAAA,KAAA,EAAgD;AACtD,UAAA,KAAA;AACC,SAAA,OAAA;AACC;AACA;AACA,aAAA,CAAA;;AACD;AACC;AACA;AACA,aAAA,GAAA;AARF;AAUA","sourcesContent":["export function getRoundFunction(round) {\r\n\tswitch (round) {\r\n\t\tcase 'floor':\r\n\t\t\treturn Math.floor\r\n\t\tdefault:\r\n\t\t\treturn Math.round\r\n\t}\r\n}\r\n\r\n// For non-negative numbers.\r\nexport function getDiffRatioToNextRoundedNumber(round) {\r\n\tswitch (round) {\r\n\t\tcase 'floor':\r\n\t\t\t// Math.floor(x) = x\r\n\t\t\t// Math.floor(x + 1) = x + 1\r\n\t\t\treturn 1\r\n\t\tdefault:\r\n\t\t\t// Math.round(x) = x\r\n\t\t\t// Math.round(x + 0.5) = x + 1\r\n\t\t\treturn 0.5\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}