{"ast":null,"code":"var _jsxFileName = \"/home/quan/code/code_js/goodpicker/frontend/src/hooks/useAuth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport { CookiesProvider, useCookies } from 'react-cookie';\nimport { useSessionStorage } from './useSessionStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthStateContext = /*#__PURE__*/React.createContext();\nconst AuthDispatchContext = /*#__PURE__*/React.createContext();\n\nconst AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useSessionStorage('user');\n  const [cookies, setCookies, removeCookies] = useCookies(['gp_token']);\n  const value = React.useMemo(() => ({\n    user,\n    setUser,\n    cookies,\n    setCookies,\n    removeCookies\n  }), [user, setUser, cookies, setCookies, removeCookies]);\n  const authState = React.useMemo(() => ({\n    user: value.user,\n    cookies: value.cookies\n  }), [value]);\n  const setAuthState = React.useCallback(_ref2 => {\n    let {\n      user,\n      token,\n      clearToken,\n      clearUser\n    } = _ref2;\n\n    if (clearToken) {\n      value.removeCookies('gp_token', {\n        path: '/'\n      });\n    } else {\n      var expireDate = new Date();\n      expireDate.setDate(expireDate.getDate() + 5);\n      value.setCookies('gp_token', token, {\n        expires: expireDate,\n        path: '/'\n      });\n    }\n\n    if (clearUser) {\n      value.setUser('');\n    } else {\n      value.setUser(user);\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(CookiesProvider, {\n    children: /*#__PURE__*/_jsxDEV(AuthStateContext.Provider, {\n      value: authState,\n      children: /*#__PURE__*/_jsxDEV(AuthDispatchContext.Provider, {\n        value: setAuthState,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthProvider, \"uCKa2SwgRnjB+KY2942LynBCjEo=\", false, function () {\n  return [useSessionStorage, useCookies];\n});\n\n_c = AuthProvider;\n\nconst useAuthState = () => {\n  _s2();\n\n  const authState = React.useContext(AuthStateContext);\n\n  if (typeof authState == 'undefined') {\n    throw new Error('useAuthState must be used within a AuthProvider');\n  }\n\n  return authState;\n};\n\n_s2(useAuthState, \"sE4ESLbV6mp5iHgwByL5Kfnx1GY=\");\n\nconst useAuthenticate = () => {\n  _s3();\n\n  const setAuthState = React.useContext(AuthDispatchContext);\n\n  if (typeof setAuthState == 'undefined') {\n    throw new Error('useAuthenticate must be used within a AuthProvider');\n  }\n\n  const authenticate = React.useCallback(_ref3 => {\n    let {\n      user,\n      token\n    } = _ref3;\n    setAuthState({\n      user,\n      token\n    });\n  }, [setAuthState]);\n  return authenticate;\n};\n\n_s3(useAuthenticate, \"T8AhPhHNrBWs4iyscySQ1j61c+8=\");\n\nconst useLogout = () => {\n  _s4();\n\n  const setAuthState = React.useContext(AuthDispatchContext);\n\n  if (typeof setAuthState == 'undefined') {\n    throw new Error('useLogout must be used within a AuthProvider');\n  }\n\n  const logout = React.useCallback(() => {\n    setAuthState({\n      clearToken: true,\n      clearUser: true\n    });\n  }, [setAuthState]);\n  return logout;\n}; // const useClearUser = () => {\n// \tconst setAuthState = React.useContext(AuthDispatchContext)\n// \tif (typeof setAuthState == 'undefined') {\n// \t\tthrow new Error('useClearUser must be used within a AuthProvider')\n// \t}\n// \tconst clearUser = React.useCallback(() => {\n// \t\tsetAuthState({ clearUser: true })\n// \t}, [setAuthState])\n// \treturn clearUser\n// }\n\n\n_s4(useLogout, \"7HWkolrwk6cXtuG1ZPUO3+dUffI=\");\n\nexport { AuthProvider, useAuthState, useAuthenticate, useLogout };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/quan/code/code_js/goodpicker/frontend/src/hooks/useAuth.js"],"names":["React","CookiesProvider","useCookies","useSessionStorage","AuthStateContext","createContext","AuthDispatchContext","AuthProvider","children","user","setUser","cookies","setCookies","removeCookies","value","useMemo","authState","setAuthState","useCallback","token","clearToken","clearUser","path","expireDate","Date","setDate","getDate","expires","useAuthState","useContext","Error","useAuthenticate","authenticate","useLogout","logout"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { CookiesProvider, useCookies } from 'react-cookie'\nimport { useSessionStorage } from './useSessionStorage'\n\nconst AuthStateContext = React.createContext()\nconst AuthDispatchContext = React.createContext()\n\nconst AuthProvider = ({ children }) => {\n\tconst [user, setUser] = useSessionStorage('user')\n\tconst [cookies, setCookies, removeCookies] = useCookies(['gp_token'])\n\n\tconst value = React.useMemo(\n\t\t() => ({ user, setUser, cookies, setCookies, removeCookies }),\n\t\t[user, setUser, cookies, setCookies, removeCookies]\n\t)\n\n\tconst authState = React.useMemo(\n\t\t() => ({ user: value.user, cookies: value.cookies }),\n\t\t[value]\n\t)\n\n\tconst setAuthState = React.useCallback(\n\t\t({ user, token, clearToken, clearUser }) => {\n\t\t\tif (clearToken) {\n\t\t\t\tvalue.removeCookies('gp_token', { path: '/' })\n\t\t\t} else {\n\t\t\t\tvar expireDate = new Date()\n\t\t\t\texpireDate.setDate(expireDate.getDate() + 5)\n\n\t\t\t\tvalue.setCookies('gp_token', token, { expires: expireDate, path: '/' })\n\t\t\t}\n\n\t\t\tif (clearUser) {\n\t\t\t\tvalue.setUser('')\n\t\t\t} else {\n\t\t\t\tvalue.setUser(user)\n\t\t\t}\n\t\t},\n\t\t[value]\n\t)\n\n\treturn (\n\t\t<CookiesProvider>\n\t\t\t<AuthStateContext.Provider value={authState}>\n\t\t\t\t<AuthDispatchContext.Provider value={setAuthState}>\n\t\t\t\t\t{children}\n\t\t\t\t</AuthDispatchContext.Provider>\n\t\t\t</AuthStateContext.Provider>\n\t\t</CookiesProvider>\n\t)\n}\n\nconst useAuthState = () => {\n\tconst authState = React.useContext(AuthStateContext)\n\n\tif (typeof authState == 'undefined') {\n\t\tthrow new Error('useAuthState must be used within a AuthProvider')\n\t}\n\n\treturn authState\n}\n\nconst useAuthenticate = () => {\n\tconst setAuthState = React.useContext(AuthDispatchContext)\n\n\tif (typeof setAuthState == 'undefined') {\n\t\tthrow new Error('useAuthenticate must be used within a AuthProvider')\n\t}\n\n\tconst authenticate = React.useCallback(\n\t\t({ user, token }) => {\n\t\t\tsetAuthState({ user, token })\n\t\t},\n\t\t[setAuthState]\n\t)\n\n\treturn authenticate\n}\n\nconst useLogout = () => {\n\tconst setAuthState = React.useContext(AuthDispatchContext)\n\n\tif (typeof setAuthState == 'undefined') {\n\t\tthrow new Error('useLogout must be used within a AuthProvider')\n\t}\n\n\tconst logout = React.useCallback(() => {\n\t\tsetAuthState({ clearToken: true, clearUser: true })\n\t}, [setAuthState])\n\n\treturn logout\n}\n\n// const useClearUser = () => {\n// \tconst setAuthState = React.useContext(AuthDispatchContext)\n\n// \tif (typeof setAuthState == 'undefined') {\n// \t\tthrow new Error('useClearUser must be used within a AuthProvider')\n// \t}\n\n// \tconst clearUser = React.useCallback(() => {\n// \t\tsetAuthState({ clearUser: true })\n// \t}, [setAuthState])\n\n// \treturn clearUser\n// }\n\nexport { AuthProvider, useAuthState, useAuthenticate, useLogout }\n"]},"metadata":{},"sourceType":"module"}