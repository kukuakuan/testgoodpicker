{"ast":null,"code":"// For all locales added\n// their relative time formatter messages will be stored here.\nvar localesData = {};\nexport function getLocaleData(locale) {\n  return localesData[locale];\n}\nexport function addLocaleData(localeData) {\n  if (!localeData) {\n    throw new Error('[javascript-time-ago] No locale data passed.');\n  } // This locale data is stored in a global variable\n  // and later used when calling `.format(time)`.\n\n\n  localesData[localeData.locale] = localeData;\n}","map":{"version":3,"sources":["../source/LocaleDataStore.js"],"names":["localesData","localeData"],"mappings":"AAAA;AACA;AACA,IAAMA,WAAW,GAAjB,EAAA;AAEA,OAAO,SAAA,aAAA,CAAA,MAAA,EAA+B;AACrC,SAAOA,WAAW,CAAlB,MAAkB,CAAlB;AACA;AAED,OAAO,SAAA,aAAA,CAAA,UAAA,EAAmC;AACzC,MAAI,CAAJ,UAAA,EAAiB;AAChB,UAAM,IAAA,KAAA,CAAN,8CAAM,CAAN;AAFwC,GAAA,CAIzC;AACA;;;AACAA,EAAAA,WAAW,CAACC,UAAU,CAAtBD,MAAW,CAAXA,GAAAA,UAAAA;AACA","sourcesContent":["// For all locales added\r\n// their relative time formatter messages will be stored here.\r\nconst localesData = {}\r\n\r\nexport function getLocaleData(locale) {\r\n\treturn localesData[locale]\r\n}\r\n\r\nexport function addLocaleData(localeData) {\r\n\tif (!localeData) {\r\n\t\tthrow new Error('[javascript-time-ago] No locale data passed.')\r\n\t}\r\n\t// This locale data is stored in a global variable\r\n\t// and later used when calling `.format(time)`.\r\n\tlocalesData[localeData.locale] = localeData\r\n}"]},"metadata":{},"sourceType":"module"}