{"ast":null,"code":"var _jsxFileName = \"/home/quan/code/code_js/goodpicker/frontend/src/pages/profile/upload-avatar/index.js\",\n    _s = $RefreshSig$();\n\nimport './style.scss';\nimport React, { useState } from \"react\";\nimport { FileImageOutlined, CloseCircleTwoTone } from '@ant-design/icons';\nimport { Image, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UploadAvatar = _ref => {\n  _s();\n\n  let {\n    name,\n    setFile\n  } = _ref;\n  const [image, setImage] = React.useState('');\n  const [isUploaded, setIsUploaded] = useState(false);\n\n  const handleImageChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      let reader = new FileReader();\n      setFile(e.target.files[0]);\n\n      reader.onload = function (e) {\n        setImage(e.target.result);\n        setIsUploaded(true);\n      }; // const oriFile = e.target.file[0];\n      // updateFileImg(oriFile)\n\n\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-avatar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-avatar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-avatar-container-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-avatar-container-box-img\",\n          children: !isUploaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"upload-input\",\n              children: /*#__PURE__*/_jsxDEV(FileImageOutlined, {\n                style: {\n                  fontSize: 60,\n                  color: '#b5b5b5'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Input // name = {name}\n            , {\n              id: \"upload-input\",\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handleImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview\",\n            children: [/*#__PURE__*/_jsxDEV(CloseCircleTwoTone, {\n              className: \"close-icon\",\n              onClick: () => {\n                setIsUploaded(false);\n                setImage(null);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              className: \"uploaded-image\",\n              src: image,\n              draggable: false,\n              alt: \"uploaded-img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UploadAvatar, \"dFSB7JzZ2CMjLz62366hIudPce8=\");\n\n_c = UploadAvatar;\nUploadAvatar.protoTypes = {// updateFileImg: PropTypes.func.isRequired\n};\nexport default UploadAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadAvatar\");","map":{"version":3,"sources":["/home/quan/code/code_js/goodpicker/frontend/src/pages/profile/upload-avatar/index.js"],"names":["React","useState","FileImageOutlined","CloseCircleTwoTone","Image","Input","UploadAvatar","name","setFile","image","setImage","isUploaded","setIsUploaded","handleImageChange","e","target","files","reader","FileReader","onload","result","readAsDataURL","fontSize","color","protoTypes"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,EAA2BC,kBAA3B,QAAqD,mBAArD;AAEA,SAASC,KAAT,EAAgBC,KAAhB,QAA4B,MAA5B;;;;AAKA,MAAMC,YAAY,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAmB;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;AAGA,QAAOY,iBAAiB,GAAIC,CAAD,IAAO;AAC9B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,IAAkBF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAtB,EAAyC;AACvC,UAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AAEAV,MAAAA,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;;AAEAC,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUL,CAAV,EAAa;AAC3BJ,QAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASK,MAAV,CAAR;AACAR,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAHD,CALuC,CASvC;AACA;;;AACAK,MAAAA,MAAM,CAACI,aAAP,CAAqBP,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACD;AACF,GAdH;;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,oBACG,CAACL,UAAD,gBACC;AAAA,oCACE;AAAO,cAAA,OAAO,EAAC,cAAf;AAAA,qCACI,QAAC,iBAAD;AAAmB,gBAAA,KAAK,EAAE;AAACW,kBAAAA,QAAQ,EAAE,EAAX;AAAeC,kBAAAA,KAAK,EAAE;AAAtB;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,KAAD,CACE;AADF;AAEE,cAAA,EAAE,EAAC,cAFL;AAGE,cAAA,IAAI,EAAC,MAHP;AAIE,cAAA,MAAM,EAAC,SAJT;AAKE,cAAA,QAAQ,EAAEV;AALZ;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,0BADD,gBAeC;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE,QAAC,kBAAD;AACI,cAAA,SAAS,EAAG,YADhB;AAEI,cAAA,OAAO,EAAE,MAAM;AACfD,gBAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,gBAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,oBADF,eASI,QAAC,KAAD;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,GAAG,EAAED,KAFP;AAGE,cAAA,SAAS,EAAE,KAHb;AAIE,cAAA,GAAG,EAAC;AAJN;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH,CAjED;;GAAMH,Y;;KAAAA,Y;AAmENA,YAAY,CAACkB,UAAb,GAA0B,CACtB;AADsB,CAA1B;AAIA,eAAelB,YAAf","sourcesContent":["import './style.scss'\nimport React, {useState} from \"react\";\nimport {FileImageOutlined, CloseCircleTwoTone } from '@ant-design/icons'\n\nimport { Image, Input} from 'antd';\n\n\n\n\nconst UploadAvatar = ({name,setFile}) => {\n\n    const [image, setImage] = React.useState('')\n    const [isUploaded, setIsUploaded] = useState(false)\n\n\n    const  handleImageChange = (e) => {\n        if (e.target.files && e.target.files[0]) {\n          let reader = new FileReader();\n\n          setFile(e.target.files[0]);\n          \n          reader.onload = function (e) {\n            setImage(e.target.result);\n            setIsUploaded(true);\n          };\n          // const oriFile = e.target.file[0];\n          // updateFileImg(oriFile)\n          reader.readAsDataURL(e.target.files[0]);\n        }\n      }\n    return (\n        <div className=\"upload-avatar\">\n          <div className=\"upload-avatar-container\">\n            <div className=\"upload-avatar-container-box\">\n              <div className=\"upload-avatar-container-box-img\">\n                {!isUploaded ? (\n                  <>\n                    <label htmlFor=\"upload-input\">\n                        <FileImageOutlined style={{fontSize: 60, color: '#b5b5b5'}} />\n                    </label>\n\n                    <Input\n                      // name = {name}\n                      id=\"upload-input\"\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={handleImageChange}\n                    />\n                  </>\n                ) : (\n                  <div className=\"image-preview\">\n                    <CloseCircleTwoTone\n                        className = \"close-icon\" \n                        onClick={() => {\n                        setIsUploaded(false);\n                        setImage(null);\n                      }}\n                    />\n                    \n                      <Image\n                        className=\"uploaded-image\"\n                        src={image}\n                        draggable={false}\n                        alt=\"uploaded-img\"\n                      />\n                  </div>\n                )}\n              </div>\n            \n            </div>\n          </div>\n        </div>\n    )\n\n}\n\nUploadAvatar.protoTypes = {\n    // updateFileImg: PropTypes.func.isRequired\n} \n\nexport default UploadAvatar"]},"metadata":{},"sourceType":"module"}