{"ast":null,"code":"var _jsxFileName = \"/home/quan/Downloads/g/goodpicker-main/frontend/src/pages/goods/comments/index.js\",\n    _s = $RefreshSig$();\n\nimport './style.scss';\nimport React from 'react';\nimport axios from 'axios';\nimport TimeAgo from 'javascript-time-ago';\nimport { Link } from 'react-router-dom';\nimport { Avatar, Form, Input, Comment, Skeleton } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport { useAuthState } from '../../../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = _ref => {\n  _s();\n\n  let {\n    goodsId\n  } = _ref;\n  const {\n    user,\n    cookies\n  } = useAuthState();\n  const [comments, setComments] = React.useState([]);\n  const [form] = Form.useForm();\n  const inputRef = React.useRef(null);\n  const timeAgo = new TimeAgo('vi-VN');\n  React.useEffect(() => {\n    const getComments = async () => {\n      const res = await axios.get('/api/comments');\n      setComments(res.data);\n    };\n\n    getComments();\n  }, []);\n\n  const renderSkeleton = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section-list-skeleton\",\n    children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true,\n      avatar: true,\n      paragraph: {\n        rows: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true,\n      avatar: true,\n      paragraph: {\n        rows: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n      active: true,\n      avatar: true,\n      paragraph: {\n        rows: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n\n  const sendComment = async value => {\n    if (value.commentContent) {\n      const res = await axios.post('/api/comments/', {\n        userID: user.id,\n        goodsID: goodsId,\n        commentContent: value.commentContent\n      }, {\n        headers: {\n          Authorization: `Bearer ${cookies['gp_token']}`\n        }\n      });\n      setComments([...comments, res.data]);\n      form.resetFields();\n      inputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section__title\",\n      children: \"B\\xECnh lu\\u1EADn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section-list\",\n      children: comments ? comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        author: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/users/${comment.userID.id}`,\n          children: comment.userID.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 10\n        }, this),\n        avatar: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/users/${comment.userID.id}`,\n          children: comment.userID.userImage ? /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"large\",\n            src: comment.userID.userImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }, this) : /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"large\",\n            className: \"\",\n            children: comment.userID.username[0].toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 10\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment-section-list-item__content\",\n          children: comment.commentContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 10\n        }, this),\n        datetime: timeAgo.format(Date.now() - (new Date() - new Date(comment.commentTime)))\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }, this)) : renderSkeleton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), user ? /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      className: \"comment-section-input\",\n      layout: \"inline\",\n      onFinish: sendComment,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"commentContent\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          ref: inputRef,\n          placeholder: \"Th\\xEAm b\\xECnh lu\\u1EADn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Comments, \"JJ2bMFEMll0qRhRWBME1q5qe21o=\", false, function () {\n  return [useAuthState, Form.useForm];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/quan/Downloads/g/goodpicker-main/frontend/src/pages/goods/comments/index.js"],"names":["React","axios","TimeAgo","Link","Avatar","Form","Input","Comment","Skeleton","SendOutlined","useAuthState","Comments","goodsId","user","cookies","comments","setComments","useState","form","useForm","inputRef","useRef","timeAgo","useEffect","getComments","res","get","data","renderSkeleton","rows","sendComment","value","commentContent","post","userID","id","goodsID","headers","Authorization","resetFields","current","focus","map","comment","username","userImage","toUpperCase","format","Date","now","commentTime"],"mappings":";;;AAAA,OAAO,cAAP;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,QAAvC,QAAuD,MAAvD;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,YAAT,QAA6B,wBAA7B;;;AAEA,MAAMC,QAAQ,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACjC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,YAAY,EAAtC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACiB,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACC,IAAD,IAASb,IAAI,CAACc,OAAL,EAAf;AACA,QAAMC,QAAQ,GAAGpB,KAAK,CAACqB,MAAN,CAAa,IAAb,CAAjB;AACA,QAAMC,OAAO,GAAG,IAAIpB,OAAJ,CAAY,OAAZ,CAAhB;AAEAF,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AACrB,UAAMC,WAAW,GAAG,YAAY;AAC/B,YAAMC,GAAG,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAU,eAAV,CAAlB;AAEAV,MAAAA,WAAW,CAACS,GAAG,CAACE,IAAL,CAAX;AACA,KAJD;;AAMAH,IAAAA,WAAW;AACX,GARD,EAQG,EARH;;AAUA,QAAMI,cAAc,GAAG,mBACtB;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACC,QAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,MAAM,MAAvB;AAAwB,MAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAnC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,MAAM,MAAvB;AAAwB,MAAA,SAAS,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,MAAM,MAAvB;AAAwB,MAAA,SAAS,EAAE;AAAEA,QAAAA,IAAI,EAAE;AAAR;AAAnC;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;;AAQA,QAAMC,WAAW,GAAG,MAAMC,KAAN,IAAe;AAClC,QAAIA,KAAK,CAACC,cAAV,EAA0B;AACzB,YAAMP,GAAG,GAAG,MAAMxB,KAAK,CAACgC,IAAN,CACjB,gBADiB,EAEjB;AACCC,QAAAA,MAAM,EAAErB,IAAI,CAACsB,EADd;AAECC,QAAAA,OAAO,EAAExB,OAFV;AAGCoB,QAAAA,cAAc,EAAED,KAAK,CAACC;AAHvB,OAFiB,EAOjB;AACCK,QAAAA,OAAO,EAAE;AACRC,UAAAA,aAAa,EAAG,UAASxB,OAAO,CAAC,UAAD,CAAa;AADrC;AADV,OAPiB,CAAlB;AAcAE,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcU,GAAG,CAACE,IAAlB,CAAD,CAAX;AACAT,MAAAA,IAAI,CAACqB,WAAL;AACAnB,MAAAA,QAAQ,CAACoB,OAAT,CAAiBC,KAAjB;AACA;AACD,GApBD;;AAsBA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACE1B,QAAQ,GACNA,QAAQ,CAAC2B,GAAT,CAAaC,OAAO,iBACpB,QAAC,OAAD;AAEC,QAAA,MAAM,eACL,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASA,OAAO,CAACT,MAAR,CAAeC,EAAG,EAAtC;AAAA,oBACEQ,OAAO,CAACT,MAAR,CAAeU;AADjB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAOC,QAAA,MAAM,eACL,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,UAASD,OAAO,CAACT,MAAR,CAAeC,EAAG,EAAtC;AAAA,oBACEQ,OAAO,CAACT,MAAR,CAAeW,SAAf,gBACA,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,GAAG,EAAEF,OAAO,CAACT,MAAR,CAAeW;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADA,gBAGA,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,OAAb;AAAqB,YAAA,SAAS,EAAC,EAA/B;AAAA,sBACEF,OAAO,CAACT,MAAR,CAAeU,QAAf,CAAwB,CAAxB,EAA2BE,WAA3B;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBARF;AAkBC,QAAA,OAAO,eACN;AAAG,UAAA,SAAS,EAAC,oCAAb;AAAA,oBACEH,OAAO,CAACX;AADV;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAuBC,QAAA,QAAQ,EAAEV,OAAO,CAACyB,MAAR,CACTC,IAAI,CAACC,GAAL,MAAc,IAAID,IAAJ,KAAa,IAAIA,IAAJ,CAASL,OAAO,CAACO,WAAjB,CAA3B,CADS;AAvBX,SACMP,OAAO,CAACR,EADd;AAAA;AAAA;AAAA;AAAA,cADA,CADM,GA8BNP,cAAc;AA/BlB;AAAA;AAAA;AAAA;AAAA,YAHD,EAqCEf,IAAI,gBACJ,QAAC,IAAD;AACC,MAAA,IAAI,EAAEK,IADP;AAEC,MAAA,SAAS,EAAC,uBAFX;AAGC,MAAA,MAAM,EAAC,QAHR;AAIC,MAAA,QAAQ,EAAEY,WAJX;AAAA,8BAMC,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,gBAAhB;AAAA,+BACC,QAAC,KAAD;AAAO,UAAA,GAAG,EAAEV,QAAZ;AAAsB,UAAA,WAAW,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAND,eAUC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAVD;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,GAeD,IApDL;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAwDA,CAvGD;;GAAMT,Q;UACqBD,Y,EAEXL,IAAI,CAACc,O;;;KAHfR,Q;AAyGN,eAAeA,QAAf","sourcesContent":["import './style.scss'\n\nimport React from 'react'\nimport axios from 'axios'\nimport TimeAgo from 'javascript-time-ago'\nimport { Link } from 'react-router-dom'\nimport { Avatar, Form, Input, Comment, Skeleton } from 'antd'\nimport { SendOutlined } from '@ant-design/icons'\nimport { useAuthState } from '../../../hooks/useAuth'\n\nconst Comments = ({ goodsId }) => {\n\tconst { user, cookies } = useAuthState()\n\tconst [comments, setComments] = React.useState([])\n\tconst [form] = Form.useForm()\n\tconst inputRef = React.useRef(null)\n\tconst timeAgo = new TimeAgo('vi-VN')\n\n\tReact.useEffect(() => {\n\t\tconst getComments = async () => {\n\t\t\tconst res = await axios.get('/api/comments')\n\n\t\t\tsetComments(res.data)\n\t\t}\n\n\t\tgetComments()\n\t}, [])\n\n\tconst renderSkeleton = () => (\n\t\t<div className=\"comment-section-list-skeleton\">\n\t\t\t<Skeleton active avatar paragraph={{ rows: 2 }} />\n\t\t\t<Skeleton active avatar paragraph={{ rows: 2 }} />\n\t\t\t<Skeleton active avatar paragraph={{ rows: 2 }} />\n\t\t</div>\n\t)\n\n\tconst sendComment = async value => {\n\t\tif (value.commentContent) {\n\t\t\tconst res = await axios.post(\n\t\t\t\t'/api/comments/',\n\t\t\t\t{\n\t\t\t\t\tuserID: user.id,\n\t\t\t\t\tgoodsID: goodsId,\n\t\t\t\t\tcommentContent: value.commentContent\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAuthorization: `Bearer ${cookies['gp_token']}`\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t)\n\n\t\t\tsetComments([...comments, res.data])\n\t\t\tform.resetFields()\n\t\t\tinputRef.current.focus()\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"comment-section\">\n\t\t\t<div className=\"comment-section__title\">Bình luận</div>\n\n\t\t\t<div className=\"comment-section-list\">\n\t\t\t\t{comments\n\t\t\t\t\t? comments.map(comment => (\n\t\t\t\t\t\t\t<Comment\n\t\t\t\t\t\t\t\tkey={comment.id}\n\t\t\t\t\t\t\t\tauthor={\n\t\t\t\t\t\t\t\t\t<Link to={`/users/${comment.userID.id}`}>\n\t\t\t\t\t\t\t\t\t\t{comment.userID.username}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tavatar={\n\t\t\t\t\t\t\t\t\t<Link to={`/users/${comment.userID.id}`}>\n\t\t\t\t\t\t\t\t\t\t{comment.userID.userImage ? (\n\t\t\t\t\t\t\t\t\t\t\t<Avatar size=\"large\" src={comment.userID.userImage} />\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Avatar size=\"large\" className=\"\">\n\t\t\t\t\t\t\t\t\t\t\t\t{comment.userID.username[0].toUpperCase()}\n\t\t\t\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\t\t<p className=\"comment-section-list-item__content\">\n\t\t\t\t\t\t\t\t\t\t{comment.commentContent}\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdatetime={timeAgo.format(\n\t\t\t\t\t\t\t\t\tDate.now() - (new Date() - new Date(comment.commentTime))\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t  ))\n\t\t\t\t\t: renderSkeleton()}\n\t\t\t</div>\n\n\t\t\t{user ? (\n\t\t\t\t<Form\n\t\t\t\t\tform={form}\n\t\t\t\t\tclassName=\"comment-section-input\"\n\t\t\t\t\tlayout=\"inline\"\n\t\t\t\t\tonFinish={sendComment}\n\t\t\t\t>\n\t\t\t\t\t<Form.Item name=\"commentContent\">\n\t\t\t\t\t\t<Input ref={inputRef} placeholder=\"Thêm bình luận\" />\n\t\t\t\t\t</Form.Item>\n\n\t\t\t\t\t<button type=\"submit\">\n\t\t\t\t\t\t<SendOutlined />\n\t\t\t\t\t</button>\n\t\t\t\t</Form>\n\t\t\t) : null}\n\t\t</div>\n\t)\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}