{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { minute } from '../steps/units';\nimport twitter from './twitter';\nexport default _objectSpread({}, twitter, {\n  // Skip \"seconds\".\n  steps: twitter.steps.filter(function (step) {\n    return step.formatAs !== 'second';\n  }) // Start showing `1m` from the first minute.\n  .map(function (step) {\n    return step.formatAs === 'minute' ? _objectSpread({}, step, {\n      minTime: minute\n    }) : step;\n  })\n});","map":{"version":3,"sources":["../../source/style/twitterFirstMinute.js"],"names":["steps","step","minTime","minute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,QAAA,gBAAA;AACA,OAAA,OAAA,MAAA,WAAA;AAEA,eAAA,aAAA,CAAA,EAAA,EAAA,OAAA,EAAA;AAEC;AACAA,EAAAA,KAAK,EAAE,OAAO,CAAP,KAAA,CAAA,MAAA,CAAqB,UAAA,IAAA,EAAI;AAAA,WAAIC,IAAI,CAAJA,QAAAA,KAAJ,QAAA;AAAzB,GAAA,EACN;AADM,GAAA,GAAA,CAED,UAAA,IAAA,EAAI;AAAA,WAAI,IAAI,CAAJ,QAAA,KAAA,QAAA,GAAA,aAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAwCC,MAAAA,OAAO,EAAEC;AAAjD,KAAA,CAAA,GAAJ,IAAA;AAFH,GAAA;AAHR,CAAA,CAAA","sourcesContent":["import { minute } from '../steps/units'\r\nimport twitter from './twitter'\r\n\r\nexport default {\r\n\t...twitter,\r\n\t// Skip \"seconds\".\r\n\tsteps: twitter.steps.filter(step => step.formatAs !== 'second')\r\n\t\t// Start showing `1m` from the first minute.\r\n\t\t.map(step => step.formatAs === 'minute' ? { ...step, minTime: minute } : step)\r\n}"]},"metadata":{},"sourceType":"module"}