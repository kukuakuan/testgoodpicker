{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nimport { getSecondsInUnit } from './units';\nimport { getDiffRatioToNextRoundedNumber } from '../round';\nexport default function getStepMinTime(step, _ref) {\n  var prevStep = _ref.prevStep,\n      timestamp = _ref.timestamp,\n      now = _ref.now,\n      future = _ref.future,\n      round = _ref.round;\n  var minTime; // \"threshold_for_xxx\" is a legacy property.\n\n  if (prevStep) {\n    if (prevStep.id || prevStep.unit) {\n      minTime = step[\"threshold_for_\".concat(prevStep.id || prevStep.unit)];\n    }\n  }\n\n  if (minTime === undefined) {\n    // \"threshold\" is a legacy property.\n    if (step.threshold !== undefined) {\n      // \"threshold\" is a legacy name for \"minTime\".\n      minTime = step.threshold; // \"threshold\" function is deprecated.\n\n      if (typeof minTime === 'function') {\n        minTime = minTime(now, future);\n      }\n    }\n  }\n\n  if (minTime === undefined) {\n    minTime = step.minTime;\n  } // A deprecated way of specifying a different threshold\n  // depending on the previous step's unit.\n\n\n  if (_typeof(minTime) === 'object') {\n    if (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\n      minTime = minTime[prevStep.id];\n    } else {\n      minTime = minTime.default;\n    }\n  }\n\n  if (typeof minTime === 'function') {\n    minTime = minTime(timestamp, {\n      future: future,\n      getMinTimeForUnit: function getMinTimeForUnit(toUnit, fromUnit) {\n        return _getMinTimeForUnit(toUnit, fromUnit || prevStep && prevStep.formatAs, {\n          round: round\n        });\n      }\n    });\n  } // Evaluate the `test()` function.\n  // `test()` function is deprecated.\n\n\n  if (minTime === undefined) {\n    if (step.test) {\n      if (step.test(timestamp, {\n        now: now,\n        future: future\n      })) {\n        // `0` threshold always passes.\n        minTime = 0;\n      } else {\n        // `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\n        minTime = 9007199254740991; // Number.MAX_SAFE_INTEGER\n      }\n    }\n  }\n\n  if (minTime === undefined) {\n    if (prevStep) {\n      if (step.formatAs && prevStep.formatAs) {\n        minTime = _getMinTimeForUnit(step.formatAs, prevStep.formatAs, {\n          round: round\n        });\n      }\n    } else {\n      // The first step's `minTime` is `0` by default.\n      minTime = 0;\n    }\n  } // Warn if no `minTime` was defined or could be deduced.\n\n\n  if (minTime === undefined) {\n    console.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2));\n  }\n\n  return minTime;\n}\n\nfunction _getMinTimeForUnit(toUnit, fromUnit, _ref2) {\n  var round = _ref2.round;\n  var toUnitAmount = getSecondsInUnit(toUnit); // if (!fromUnit) {\n  // \treturn toUnitAmount;\n  // }\n  // if (!fromUnit) {\n  // \tfromUnit = getPreviousUnitFor(toUnit)\n  // }\n\n  var fromUnitAmount;\n\n  if (fromUnit === 'now') {\n    fromUnitAmount = getSecondsInUnit(toUnit);\n  } else {\n    fromUnitAmount = getSecondsInUnit(fromUnit);\n  }\n\n  if (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\n    return toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round));\n  }\n}","map":{"version":3,"sources":["../../source/steps/getStepMinTime.js"],"names":["prevStep","timestamp","now","future","round","minTime","step","getMinTimeForUnit","fromUnit","console","JSON","toUnitAmount","getSecondsInUnit","fromUnitAmount","getDiffRatioToNextRoundedNumber"],"mappings":"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","sourcesContent":["import { getSecondsInUnit } from './units'\r\nimport { getDiffRatioToNextRoundedNumber } from '../round'\r\n\r\nexport default function getStepMinTime(step, {\r\n\tprevStep,\r\n\ttimestamp,\r\n\t// `now` argument is used in a deprecated `step.test()` function.\r\n\tnow,\r\n\tfuture,\r\n\tround\r\n}) {\r\n\tlet minTime\r\n\t// \"threshold_for_xxx\" is a legacy property.\r\n\tif (prevStep) {\r\n\t\tif (prevStep.id || prevStep.unit) {\r\n\t\t\tminTime = step[`threshold_for_${prevStep.id || prevStep.unit}`]\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\t// \"threshold\" is a legacy property.\r\n\t\tif (step.threshold !== undefined) {\r\n\t\t\t// \"threshold\" is a legacy name for \"minTime\".\r\n\t\t\tminTime = step.threshold\r\n\t\t\t// \"threshold\" function is deprecated.\r\n\t\t\tif (typeof minTime === 'function') {\r\n\t\t\t\tminTime = minTime(now, future)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tminTime = step.minTime\r\n\t}\r\n\t// A deprecated way of specifying a different threshold\r\n\t// depending on the previous step's unit.\r\n\tif (typeof minTime === 'object') {\r\n\t\tif (prevStep && prevStep.id && minTime[prevStep.id] !== undefined) {\r\n\t\t\tminTime = minTime[prevStep.id]\r\n\t\t} else {\r\n\t\t\tminTime = minTime.default\r\n\t\t}\r\n\t}\r\n\tif (typeof minTime === 'function') {\r\n\t\tminTime = minTime(timestamp, {\r\n\t\t\tfuture,\r\n\t\t\tgetMinTimeForUnit(toUnit, fromUnit) {\r\n\t\t\t\treturn getMinTimeForUnit(\r\n\t\t\t\t\ttoUnit,\r\n\t\t\t\t\tfromUnit || prevStep && prevStep.formatAs,\r\n\t\t\t\t\t{ round }\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\t// Evaluate the `test()` function.\r\n\t// `test()` function is deprecated.\r\n\tif (minTime === undefined) {\r\n\t\tif (step.test) {\r\n\t\t\tif (step.test(timestamp, {\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})) {\r\n\t\t\t\t// `0` threshold always passes.\r\n\t\t\t\tminTime = 0\r\n\t\t\t} else {\r\n\t\t\t\t// `MAX_SAFE_INTEGER` threshold won't ever pass in real life.\r\n\t\t\t\tminTime = 9007199254740991 // Number.MAX_SAFE_INTEGER\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (minTime === undefined) {\r\n\t\tif (prevStep) {\r\n\t\t\tif (step.formatAs && prevStep.formatAs) {\r\n\t\t\t\tminTime = getMinTimeForUnit(step.formatAs, prevStep.formatAs, { round })\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// The first step's `minTime` is `0` by default.\r\n\t\t\tminTime = 0\r\n\t\t}\r\n\t}\r\n\t// Warn if no `minTime` was defined or could be deduced.\r\n\tif (minTime === undefined) {\r\n\t\tconsole.warn('[javascript-time-ago] A step should specify `minTime`:\\n' + JSON.stringify(step, null, 2))\r\n\t}\r\n\treturn minTime\r\n}\r\n\r\nfunction getMinTimeForUnit(toUnit, fromUnit, { round }) {\r\n\tconst toUnitAmount = getSecondsInUnit(toUnit)\r\n\t// if (!fromUnit) {\r\n\t// \treturn toUnitAmount;\r\n\t// }\r\n\t// if (!fromUnit) {\r\n\t// \tfromUnit = getPreviousUnitFor(toUnit)\r\n\t// }\r\n\tlet fromUnitAmount\r\n\tif (fromUnit === 'now') {\r\n\t\tfromUnitAmount = getSecondsInUnit(toUnit)\r\n\t} else {\r\n\t\tfromUnitAmount = getSecondsInUnit(fromUnit)\r\n\t}\r\n\tif (toUnitAmount !== undefined && fromUnitAmount !== undefined) {\r\n\t\treturn toUnitAmount - fromUnitAmount * (1 - getDiffRatioToNextRoundedNumber(round))\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}