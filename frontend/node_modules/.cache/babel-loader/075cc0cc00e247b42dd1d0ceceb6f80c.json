{"ast":null,"code":"var _jsxFileName = \"/home/quan/code/code_js/goodpicker/frontend/src/pages/profile/change_password/index.js\",\n    _s = $RefreshSig$();\n\nimport './style.scss';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Form, Button, message, Tabs, Modal } from 'antd';\nimport { useHistory } from 'react-router-dom';\nimport { useAuthState, useAuthenticate } from '../../../hooks/useAuth';\nimport Password from 'antd/lib/input/Password';\nimport axios from 'axios';\nimport Loader from '../../../components/elements/loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst setPassword = (state, action) => {\n  switch (action.type) {\n    // case 'get_provinces':\n    // \treturn { ...state, provinces: action.provinces }\n    // case 'update_files':\n    // \treturn { ...state, fileImg: action.fileImg }\n    // case 'update_index':\n    // \treturn { ...state, mainIndex: action.mainIndex }\n    case 'change_success':\n      return { ...state,\n        status: 'success',\n        message: 'Cập nhật thành công',\n        clear: true\n      };\n\n    case 'change_fail':\n      return { ...state,\n        status: 'error',\n        message: 'Đã có lỗi trong quá trình cập nhật. Vui lòng kiểm tra thông tin đã nhập'\n      };\n\n    case 'reset_status':\n      return { ...state,\n        status: 'idle'\n      };\n    // case 'reset_images':\n    // \treturn { ...state, clear: false }\n    // case 'no_images':\n    // \treturn {\n    // \t\t...state,\n    // \t\tstatus: 'error',\n    // \t\tmessage: 'Bài đăng cần kèm theo ảnh. Vui lòng thêm ảnh vào bài đăng.'\n    // \t}\n\n    default:\n      throw new Error('Impossible!');\n  }\n};\n\nconst ChangePassword = () => {\n  _s();\n\n  const rules = {\n    currentPassword: [{\n      // type: \"password\",\n      required: true,\n      message: 'Vui lòng nhập mật khẩu cũ'\n    }],\n    newPassword: [{\n      // type: \"password\",\n      required: true,\n      message: 'Vui lòng nhập mật khẩu mới'\n    }],\n    confirmNewPassword: [{\n      // type: \"password\",\n      required: true,\n      message: 'Vui lòng nhập lại mật khẩu mới'\n    }, _ref => {\n      let {\n        getFieldValue\n      } = _ref;\n      return {\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('Mật khẩu nhập lại không khớp'));\n        }\n\n      };\n    }]\n  };\n  const {\n    user,\n    cookies\n  } = useAuthState();\n  const history = useHistory();\n  const [currentPassword, setCurrentPassword] = React.useState(user.password);\n  const [checkPassword, setCheckPassword] = React.useState(false);\n  const [state, dispatch] = React.useReducer(setPassword, {\n    status: 'idle',\n    intitialValues: {\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: ''\n    }\n  });\n  const [form] = Form.useForm();\n  const unmountedRef = React.useRef(false);\n  const authenticate = useAuthenticate();\n\n  const onFinishSubmit = async values => {\n    let formData = new FormData();\n\n    if (values.currentPassword === user.password) {\n      formData.append('password', values.newPassword);\n    }\n\n    const modal = Modal.info({\n      className: 'new-user-modal',\n      title: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"new-user-modal__title\",\n        children: \"\\u0110ang x\\u1EED l\\xFD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this),\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-user-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u0110ang x\\u1EED l\\xFD c\\u1EADp nh\\u1EADt c\\u1EE7a b\\u1EA1n, vui l\\xF2ng ch\\u1EDD trong gi\\xE2y l\\xE1t.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Loader, {\n          size: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this),\n      icon: null,\n      okButtonProps: {\n        hidden: true\n      }\n    });\n\n    try {\n      await axios.patch(`/api/users/${user.id}/`, formData, {}).then(res => {\n        console.log(res.data.password);\n        authenticate({\n          user: res.data,\n          token: cookies['gp_token']\n        });\n      });\n\n      if (!unmountedRef.current) {\n        form.resetFields();\n        dispatch({\n          type: 'change_success'\n        });\n      }\n    } catch (error) {\n      if (!unmountedRef.current) {\n        dispatch({\n          type: 'change_fail'\n        });\n      }\n    } finally {\n      window.scrollTo(0, 0);\n\n      if (!unmountedRef.current) {\n        modal.destroy();\n      }\n    }\n\n    message.success('Change password complete'); // history.push('/')\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Xin l\\u1ED7i kh\\xF4ng th\\u1EC3 thay \\u0111\\u1ED5i m\\u1EADt kh\\u1EA9u \\u0111\\u01B0\\u1EE3c.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePassword, \"sNoDA+mCu8A6/q6TnbuxUPhCkvA=\", false, function () {\n  return [useAuthState, useHistory, Form.useForm, useAuthenticate];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/quan/code/code_js/goodpicker/frontend/src/pages/profile/change_password/index.js"],"names":["React","useEffect","useState","useRef","Form","Button","message","Tabs","Modal","useHistory","useAuthState","useAuthenticate","Password","axios","Loader","setPassword","state","action","type","status","clear","Error","ChangePassword","rules","currentPassword","required","newPassword","confirmNewPassword","getFieldValue","validator","_","value","Promise","resolve","reject","user","cookies","history","setCurrentPassword","password","checkPassword","setCheckPassword","dispatch","useReducer","intitialValues","form","useForm","unmountedRef","authenticate","onFinishSubmit","values","formData","FormData","append","modal","info","className","title","content","icon","okButtonProps","hidden","patch","id","then","res","console","log","data","token","current","resetFields","error","window","scrollTo","destroy","success"],"mappings":"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","sourcesContent":["import './style.scss'\nimport React, { useEffect, useState,useRef } from 'react'\nimport { Form, \n    Button, message, \n    Tabs, Modal } from 'antd'\nimport { useHistory } from 'react-router-dom'\nimport { useAuthState, useAuthenticate } from '../../../hooks/useAuth'\nimport Password from 'antd/lib/input/Password'\nimport axios from 'axios'\nimport Loader from '../../../components/elements/loader'\n\n\nconst setPassword = (state, action) => {\n\tswitch (action.type) {\n\t\t// case 'get_provinces':\n\t\t// \treturn { ...state, provinces: action.provinces }\n\t\t// case 'update_files':\n\t\t// \treturn { ...state, fileImg: action.fileImg }\n\t\t// case 'update_index':\n\t\t// \treturn { ...state, mainIndex: action.mainIndex }\n\t\tcase 'change_success':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: 'success',\n\t\t\t\tmessage: 'Cập nhật thành công',\n\t\t\t\tclear: true\n\t\t\t}\n\t\tcase 'change_fail':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: 'error',\n\t\t\t\tmessage:\n\t\t\t\t\t'Đã có lỗi trong quá trình cập nhật. Vui lòng kiểm tra thông tin đã nhập'\n\t\t\t}\n\t\tcase 'reset_status':\n\t\t\treturn { ...state, status: 'idle' }\n\t\t// case 'reset_images':\n\t\t// \treturn { ...state, clear: false }\n\t\t// case 'no_images':\n\t\t// \treturn {\n\t\t// \t\t...state,\n\t\t// \t\tstatus: 'error',\n\t\t// \t\tmessage: 'Bài đăng cần kèm theo ảnh. Vui lòng thêm ảnh vào bài đăng.'\n\t\t// \t}\n\t\tdefault:\n\t\t\tthrow new Error('Impossible!')\n\t}\n}\n\n\nconst ChangePassword = () => {\n\n    const rules = {\n        currentPassword: [\n            {\n                // type: \"password\",\n                required: true,\n                message: 'Vui lòng nhập mật khẩu cũ'\n            }\n        ],\n        newPassword: [\n            {\n                // type: \"password\",\n                required: true,\n                message: 'Vui lòng nhập mật khẩu mới'\n            }\n        ],\n        confirmNewPassword: [\n            {\n                // type: \"password\",\n                required: true,\n                message: 'Vui lòng nhập lại mật khẩu mới'\n            },\n\t\t\t({ getFieldValue }) => ({\n\t\t\t\tvalidator(_, value) {\n\t\t\t\t\tif (!value || getFieldValue('password') === value) {\n\t\t\t\t\t\treturn Promise.resolve()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.reject(new Error('Mật khẩu nhập lại không khớp'))\n\t\t\t\t}\n\t\t\t})\n        ]\n    }\n\n    const {user, cookies} = useAuthState()\n\n    const history = useHistory()\n    const [currentPassword, setCurrentPassword] = React.useState(user.password)\n\n    const [checkPassword, setCheckPassword] = React.useState(false)\n    \n    const [state, dispatch] = React.useReducer(setPassword, {\n        status: 'idle',\n        intitialValues: {\n            currentPassword: '',\n            newPassword: '',\n            confirmNewPassword: '',\n        }\n    })\n\n    const [form] = Form.useForm()\n\tconst unmountedRef = React.useRef(false)\n\tconst authenticate = useAuthenticate()\n    \n    const onFinishSubmit = async values => {\n\n        let formData = new FormData()\n        \n        if (values.currentPassword === user.password) {\n            formData.append('password', values.newPassword)\n        }\n\n        const modal = Modal.info({\n\t\t\tclassName: 'new-user-modal',\n\t\t\ttitle: <span className=\"new-user-modal__title\">Đang xử lý</span>,\n\t\t\tcontent: (\n\t\t\t\t<div className=\"new-user-modal-content\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\tĐang xử lý cập nhật của bạn, vui lòng chờ trong giây lát.\n\t\t\t\t\t</div>\n\t\t\t\t\t<Loader size={150} />\n\t\t\t\t</div>\n\t\t\t),\n\t\t\ticon: null,\n\t\t\tokButtonProps: { hidden: true }\n\t\t})\n\n        try {\n            await axios.patch(`/api/users/${user.id}/`, formData ,{\n                \n            })\n            .then(res => {\n\t\t\t\tconsole.log(res.data.password)\n\t\t\t\tauthenticate({user: res.data, token: cookies['gp_token']})\n\t\t\t})\n\n\t\t\tif (!unmountedRef.current) {\n\t\t\t\tform.resetFields()\n\t\t\t\tdispatch({ type: 'change_success' })\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (!unmountedRef.current) {\n\t\t\t\tdispatch({ type: 'change_fail' })\n\t\t\t}\n\t\t} finally {\n\t\t\twindow.scrollTo(0, 0)\n\n\t\t\tif (!unmountedRef.current) {\n\t\t\t\tmodal.destroy()\n\t\t\t}\n\t\t}\n\n        message.success('Change password complete')\n        // history.push('/')\n    }\n    return(\n        <React.Fragment>\n            \n            {/* <Form\n                form = {form}\n                initialValues = {state.initialValues}\n                onFinish={onFinishSubmit}\n                >\n                <Form.Item\n                    className=\"m-0\"\n                    name=\"currentPassword\"\n                    rules={rules.currentPassword}\n                    label=\"Mật khẩu cũ\"\n                >\n                    <CustomInputField\n                        \n                        customStyle=\"style#2\"\n                    />\n                </Form.Item>\n            \n                <Form.Item\n                    className=\"m-0\"\n                    name=\"password\"\n                    rules={rules.newPassword}\n                    label=\"Mật khẩu mới\"\n                >\n                <CustomInputField\n                    \n                    customStyle=\"style#2\"\n                />\n                </Form.Item>\n\n                \n\n                <Form.Item\n                    className=\"m-0\"\n                    name=\"confirmNewPassword\"\n                    rules={rules.confirmNewPassword}\n                    label=\"Nhập lại mật khẩu mới\"\n                    >\n                    <CustomInputField\n                        \n                        customStyle=\"style#2\"\n                    />\n                </Form.Item>\n\n\n                <Form.Item>\n                    <Button\n                        name=\"submit\"\n                        className=\"submit-button\"\n                        htmlType=\"submit\"\n                        type=\"primary\"\n                    >\n                        Hoàn tất\n                    </Button>\n                </Form.Item>\n            </Form> */}\n            <h1>Xin lỗi không thể thay đổi mật khẩu được.</h1>\n        </React.Fragment>\n    )\n}\n\nexport default ChangePassword"]},"metadata":{},"sourceType":"module"}